name: Ubuntu

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  test:

    env:
      DEBIAN_FRONTEND: noninteractive
      TZ: Asia/Shanghai

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        version: [20.04, 22.04]

    container: ubuntu:${{ matrix.version }}

    steps:
      - uses: actions/checkout@main

      - run:  apt -y update
      - run:  apt -y install cmake ninja-build pkg-config g++ linux-headers-generic  curl zip unzip tar git

      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          repository: microsoft/vcpkg
          path: vcpkg

      - run:  cd vcpkg && ./bootstrap-vcpkg.sh

      - run:  cd vcpkg && ./vcpkg install curl openssl libarchive libyaml zlib

      - run:  |
          cmake \
              -S . \
              -B build.d \
              -G Ninja \
              -DCMAKE_TOOLCHAIN_FILE=$PWD/vcpkg/scripts/buildsystems/vcpkg.cmake \
              -DCMAKE_INSTALL_PREFIX=./output \
              -DCMAKE_VERBOSE_MAKEFILE=ON

      - run:  cmake --build   build.d
      - run:  cmake --install build.d


      - run: ./output/bin/python3-setup

      - run: ./output/bin/python3-setup --help
      - run: ./output/bin/python3-setup -h

      - run: ./output/bin/python3-setup --version
      - run: ./output/bin/python3-setup -V

      - run: ./output/bin/python3-setup sysinfo

      - run: ./output/bin/python3-setup env

      - run: ./output/bin/python3-setup show-default-config

      - run: ./output/bin/python3-setup integrate zsh
      - run: ./output/bin/python3-setup integrate zsh -v

      - run: ./output/bin/python3-setup setup -v

      - run: |
          export PATH="$HOME/.python3-setup/python3/bin:$PATH"
          pip3 install meson

       #- run: ./output/bin/python3-setup upgrade-self
